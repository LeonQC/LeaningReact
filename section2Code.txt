<<Class12>>

<------------------------------------------------------
var myName = 'Max'
console.log(myName);

myName = 'Manu'
console.log(myName);

//Same result
let myName = 'Max'
console.log(myName);

myName = 'Manu'
console.log(myName);


//const value cant change

const myName = 'Max'
console.log(myName);

myName = 'Manu'
console.log(myName);



------------------------------------------------------>


<<Class13>>

<------------------------------------------------------
const printMyName = (name) => {
	console.log(name);
}

printMyName('Max');



//also can write to this, Same result

const printMyName = () => {
	console.log('Max');
}

printMyName();



//Mutilple variable

const printMyName = (name, age) => {
	console.log(name, age);
}

printMyName('Max', 28);


//More example

const multiply = (number) => {
	return number * 2;
}

console.log(multiply(2));


//Shot way to write this

const multiply = (number) => number * 2;
console.log(mutilply(2));

----------------------------------------------------->


<<Class15>>

<-----------------------------------------------------
//need add super() at extends class
class Human {
	constructer(){
		this.gender = 'male';
	}
	
	printGender(){
		console.log(this.gender);
	}
}

class Person extends Human {
	constructer(){
		super();
		this.name = 'Max';
	}
	
	printMyName() {
		console.log(this.name);
	} 
}

const person = new Person();
person.printMyName();
person.printGender();


//add gender at extends class will update the value at human class

class Human {
	constructer(){
		this.gender = 'male';
	}
	
	printGender(){
		console.log(this.gender);
	}
}

class Person extends Human {
	constructer(){
		super();
		this.name = 'Max';
		//add gender
		this.gender = 'female'
	}
	
	printMyName() {
		console.log(this.name);
	} 
}

const person = new Person();
person.printMyName();
person.printGender();


----------------------------------------------------->


<<Class16>>
//ES6 
class Human {
	gender = 'male';
	
	printGender = () => {
		console.log(this.gender);
	}
}

class Person extends Human {
	constructer(){
		name = 'Max';
		gender = 'female'
	}
	
	printMyName= () => {
		console.log(this.name);
	} 
}

const person = new Person();
person.printMyName();
person.printGender();

----------------------------------------------------->


<<Class17>>
//[1, 2, 3, 4]
const numbers = [1, 2, 3];
const newNumbers = [...numbers, 4];
console.log(newNumbers);


//[[1, 2, 3], 4]

const numbers = [1, 2, 3];
const newNumbers = [numbers, 4];
console.log(newNumbers);

//name

const person = {
	name: 'Max';
}

const newPerson = {
	...person,
	age: 28
}

console.log(newPerson);

//filter, index start from 1 ;

const filter = (...args) => {
	return args.filter(el => el ===1);
}

console.log(filter(1, 2, 3,));


----------------------------------------------------->


<<Class18>>

//1
//3
const numbers = [1, 2, 3];
[num1, , num3] = numbers;
console.log(num1, num3);


----------------------------------------------------->


<<Class19>>

//1

const number = 1;
const num2 = numbers;
console.log(num2);

//Max
const person = {
	name:'Max';
};
const secondPerson = person

console.log(secondPerson);

//Max
const person = {
	name:'Max';
};
const secondPerson = person;
person.name = 'Manu';

console.log(secondPerson);


//Max
const person = {
	name:'Max';
};
const secondPerson = {
	...person
};
person.name = 'Manu';

console.log(secondPerson);


----------------------------------------------------->


<<Class19>>
